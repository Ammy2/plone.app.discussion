[buildout]
extensions = mr.developer buildout.dumppickedversions
unzip = true
parts =
    instance
    zopepy
    omelette
    test
    coverage-test
    coverage-report

dump-picked-versions-file = versions.cfg
overwrite-picked-versions-file = True

tractor-src-directory = src
packages-under-test = plone.app.discussion

# Change the number here to change the version of Plone being used
extends = 
    http://download.zope.org/Zope2/index/2.12.1/versions.cfg
    http://dist.plone.org/release/4.0a4/versions.cfg
versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.0a4
    http://dist.plone.org/thirdparty

# Add additional eggs here
eggs =
    collective.autoresizetextarea
    plone.formwidget.captcha
    plone.formwidget.recaptcha
    Products.PdbDebugMode
    plone.reload
    ipdb

develop =
    src/plone.formwidget.captcha
    src/plone.formwidget.recaptcha
    src/collective.autoresizetextarea

auto-checkout =
    plone.app.discussion
    plone.formwidget.captcha
    plone.formwidget.recaptcha
    collective.autoresizetextarea

[versions]
zope.schema = 3.6.0

[instance]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
#debug-mode = on
#verbose-security = on
blob-storage = var/blobstorage
# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =
    Zope2
    Plone
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.autoresizetextarea
    plone.formwidget.captcha
    plone.formwidget.recaptcha

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
packages = ${instance:location}/lib/python ./

[test]
recipe = collective.xmltestreport
eggs = plone.app.discussion
# other eggs in this list not shown
extra-paths = ${instance:location}/lib/python
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']

[coverage-test]
recipe = zc.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage', '../../coverage', '-v', '--auto-progress']

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'report')

[sources]
plone.app.discussion = svn https://svn.plone.org/svn/plone/plone.app.discussion/trunk
plone.formwidget.captcha = svn https://svn.plone.org/svn/plone/plone.formwidget.captcha/trunk
plone.formwidget.recaptcha = svn https://svn.plone.org/svn/plone/plone.formwidget.recaptcha/trunk
collective.autoresizetextarea = svn https://svn.plone.org/svn/collective/collective.autoresizetextarea/trunk

